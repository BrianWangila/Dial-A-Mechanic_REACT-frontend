{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/Moringa/Development/Moringa-Projects/Phase-3/DAM-client/src/components/EditReview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditMechanic(_ref) {\n  _s();\n\n  let {\n    id,\n    onUpdateReview\n  } = _ref;\n  // const [mechDetails, setMechDetails] = useState(body)\n  const [comment, setComment] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    const updateReview = {\n      comment: comment,\n      rating: rating\n    };\n    fetch(`http://localhost:9292/reviews/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updateReview)\n    }).then(resp => resp.json()).then(updatedReview => onUpdateMechanic(updatedReview));\n    console.log(updateReview);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"body\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"body\",\n        value: rating,\n        onChange: e => setRating(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Save Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditMechanic, \"oXjzbXoFrEY4Z4laSYHmdnGjFrk=\");\n\n_c = EditMechanic;\nexport default EditMechanic;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMechanic\");","map":{"version":3,"names":["React","useState","EditMechanic","id","onUpdateReview","comment","setComment","rating","setRating","handleFormSubmit","e","preventDefault","updateReview","fetch","method","headers","body","JSON","stringify","then","resp","json","updatedReview","onUpdateMechanic","console","log","target","value"],"sources":["/home/moringa/Documents/Moringa/Development/Moringa-Projects/Phase-3/DAM-client/src/components/EditReview.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction EditMechanic({ id, onUpdateReview }){\n  // const [mechDetails, setMechDetails] = useState(body)\n  const [comment, setComment] = useState(\"\")\n  const [rating, setRating] = useState(\"\")\n\n  function handleFormSubmit(e){\n    e.preventDefault()\n\n    const updateReview = {\n      comment: comment,\n      rating: rating,\n    }\n\n    fetch(`http://localhost:9292/reviews/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify(updateReview)\n    })\n    .then((resp) => resp.json())\n    .then((updatedReview) => onUpdateMechanic(updatedReview))\n    console.log(updateReview)\n  }\n\n\n  return (\n    <div>\n      <form className=\"\" onSubmit={handleFormSubmit}>\n        <input type=\"text\" name=\"body\" value={comment} onChange={(e) => setComment(e.target.value)}/>\n        <input type=\"text\" name=\"body\" value={rating} onChange={(e) => setRating(e.target.value)}/>\n\n        <input type=\"submit\" value=\"Save Details\"/>\n      </form>\n    </div>\n  )\n}\nexport default EditMechanic;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,YAAT,OAA6C;EAAA;;EAAA,IAAvB;IAAEC,EAAF;IAAMC;EAAN,CAAuB;EAC3C;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;EAEA,SAASQ,gBAAT,CAA0BC,CAA1B,EAA4B;IAC1BA,CAAC,CAACC,cAAF;IAEA,MAAMC,YAAY,GAAG;MACnBP,OAAO,EAAEA,OADU;MAEnBE,MAAM,EAAEA;IAFW,CAArB;IAKAM,KAAK,CAAE,iCAAgCV,EAAG,EAArC,EAAwC;MAC3CW,MAAM,EAAE,OADmC;MAE3CC,OAAO,EAAE;QACP,gBAAe;MADR,CAFkC;MAK3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf;IALqC,CAAxC,CAAL,CAOCO,IAPD,CAOOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPhB,EAQCF,IARD,CAQOG,aAAD,IAAmBC,gBAAgB,CAACD,aAAD,CARzC;IASAE,OAAO,CAACC,GAAR,CAAYb,YAAZ;EACD;;EAGD,oBACE;IAAA,uBACE;MAAM,SAAS,EAAC,EAAhB;MAAmB,QAAQ,EAAEH,gBAA7B;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,KAAK,EAAEJ,OAAtC;QAA+C,QAAQ,EAAGK,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV;MAA1E;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,KAAK,EAAEpB,MAAtC;QAA8C,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACgB,MAAF,CAASC,KAAV;MAAxE;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GApCQzB,Y;;KAAAA,Y;AAqCT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}